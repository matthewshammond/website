<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal on Matt Hammond Inc</title>
    <link>http://localhost:1313/tags/terminal/</link>
    <description>Recent content in Terminal on Matt Hammond Inc</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 11 Jan 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac Network Cli Snippets</title>
      <link>http://localhost:1313/mac-network-cli-snippets/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/mac-network-cli-snippets/</guid>
      <description>ipconfig get ip address ipconfig getifaddr en0 get subnet mask ipconfig getoption en0 subnet_mask get dns server ipconfig getoption en0 domain_name_server get info about how en0 got its dhcp on ipconfig getpacket en0 renew dhcp lease ipconfig set en0 DHCP # or this ipconfig set en1 BOOTP &amp;amp;&amp;amp; ipconfig set en1 DHCP ifconfig en1 down &amp;amp;&amp;amp; ifconfig en1 up set a specific ip address ipconfig set en0 INFORM 192.168.1.160 ifconfig get network info ifconfig en0 set ip address and netmask ifconfig en0 inet 192.</description>
    </item>
    <item>
      <title>Mac Snippets</title>
      <link>http://localhost:1313/mac-snippets/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/mac-snippets/</guid>
      <description>Code Snippets remove duplicates from $PATH typeset -U PATH link airport sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport partition USB sudo diskutil partitionDisk /dev/disk2 4 GPT ExFAT Tails 32G APFS Keys 10M ExFAT Drive 1G ExFAT Go\ Drive R sudo diskutil apfs encryptVolume disk3s1 -user disk format USB diskutil erasedisk ExFAT GoDrive disk2 #format for Linux only diskutil erasedisk MS-DOS GODRIVE disk2 #format for Mac/Linux write image to usb sudo gdd if=~/Downloads/debian.iso of=/dev/disk2 status=progress bs=4M unload macfuse kernel sudo kextunload -b io.</description>
    </item>
    <item>
      <title>Netcat Chat Server</title>
      <link>http://localhost:1313/netcat-chat-server/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/netcat-chat-server/</guid>
      <description>Local Host netcat -l -p 1299 Connecting Host netcat localhost 1299 </description>
    </item>
    <item>
      <title>SSH Keys</title>
      <link>http://localhost:1313/ssh-keys/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ssh-keys/</guid>
      <description>create ssh key in terminal ssh-keygen -a 100 -t ed25519 -f ~/.ssh/id_ed25519 -C &amp;#34;john@example.com&amp;#34; -a: It’s the numbers of KDF (Key Derivation Function) rounds. Higher numbers result in slower passphrase verification, increasing the resistance to brute-force password cracking should the private-key be stolen. -t: Specifies the type of key to create, in our case the Ed25519. -f: Specify the filename of the generated key file. If you want it to be discovered automatically by the SSH agent, it must be stored in the default .</description>
    </item>
    <item>
      <title>Steganography Payload</title>
      <link>http://localhost:1313/steganography-payload/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/steganography-payload/</guid>
      <description>Create Payload create a bash script (i.e. payload.sh) #!/bin/bash echo &amp;#34;This is the payload script&amp;#34; transform script to base64 cat payload.sh | base64 | tr -d &amp;#39;\n&amp;#39; Embed Payload clear metadata from image exiftool -all= image.jpg load hash into image exiftool -Certificate=&amp;#39;base64 hash&amp;#39; image.jpg Execute Payload p=$(cat image.jpg | grep Cert -a | sed &amp;#39;s/&amp;lt;[^&amp;gt;]*&amp;gt;//g&amp;#39; | base64 -D);eval $p </description>
    </item>
  </channel>
</rss>
